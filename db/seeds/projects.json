[{"id":"about","name":"about","title":"Hi,","is_live":true,"body_text":"This is Peter, web developer, designer, (natural) language enthusiast, yogi, cook. An all-in-all friendly, enthusiastic fellow with eager-to-pedal feet, a green thumb and a curious mind.\n\nI develop sites and apps - the full-stack thereof - though my strengths and heart lie in clean, well-factored user interfaces and beautiful, elaborate graphics. I work with and get inspiration from the following technologies: React.js, Backbone.js, Marionette.js, d3.js, three.js, leaflet.js and Sass on the front-end, and Node.js, Express.js as well as Ruby on Rails behind the scenes.\n\nI am also quite interested in coding outside of the browser, from architectural and jewelry design to natural language processing, animation and computational art. A fresh idea on how to freshen up a codebase often comes from the outside.\n\nAlso, I teach! From helping a friend through the (insanely hard) Romanian mathematics baccalaureat through high-school English, pre-med Physics, digital fabrication and finally mentoring a web developer intern, I take enjoyment in communicating, explaining and listening, and most importantly, igniting excitement both around and within me.\n\nYou can find me on my bike on the streets of DC, its hip spots such as Compass Coffee or Slipstream, as well as on [GitHub](https://github.com/pickled-plugins), [LinkedIn](https://www.linkedin.com/in/peterszerzo), [YouTube](http://www.youtube.com/user/szerzo1), [Couchsurfing](https://www.couchsurfing.com/people/mighty-comfortable) and [SoundCloud](https://soundcloud.com/bbo-listen). Let's talk!"},{"id":"peterszerzo-com","type":"project","group":"","technologies":["Express.js","React.js"]},{"id":"atlas","url":"http://atlas.newamerica.org","type":"project","group":"code","categories":["code"],"dates":["2014-12","present"],"name":"atlas.newamerica.org","title":"atlas.newamerica.org","is_live":true,"languages":["JavaScript"],"technologies":["React.js","Backbone.js","Marionette.js","d3.js","Leaflet.js","Express.js"],"body_text":"[Atlas](http://atlas.newamerica.org) is a new data visualization and presentation platform for the New America Foundation's Education Policy Program. It delivers the program's carefully collected data to policymakers, analysts and the general public in a beautiful, clear, highly interactive format.\n\nAtlas also features a back-end that allows policy analysts to create interactive content without coding. We do a a fair amount of fun experimentation on how to enhance this experience.\n\nI serve this effort as a lead developer, but I also spend a lot of time nerding out about design and UX.\n\n# Technology\n\nAtlas is a native web application powered by Express.js. It is on its way to becoming a fully isomorphic application, with Backbone.js data models and React.js components shared by the client and the server.\n\nData visualization and interactive mapping components are handled by the very capable d3.js and Leaflet.js. We've figured out some [nice ways](/things/scaling-tricks-for-geo) to integrate these libraries into our client-side codebase.\n\n# History\n\nThe codebase has come a long way, included a whole lot of fun, learning and intensity. Here are some of the highlights:\n\n## November 2014\n\nWe brainstormed on the scope of the platform and made decisions on the technology stack used for prototyping. Ruby on Rails 4.2, Backbone.js and Marionette.js 2.3 are the winners.\n\n## December 2014\n\nThe home page and the projects listings page is built out as a single-page app using Marionette.js.\n\nAn initial [heatmap](http://atlas.newamerica.org/mapping-college-readiness) and [pindrop](http://atlas.newamerica.org/tech-early-literacy) map templates are built out using vanilla JavaScript modules. The following starts showing up all over the place:\n\n\tvar Atlas.SomeMappingModule = function() {\n\t\t\n\t\tvar self = {};\n\n\t\t// Add event emitting, handling and listening capabilities.\n\t\t_.extend(self, Backbone.Events);\n\n\t\tvar privateMethod = function() {};\n\n\t\tself.listenTo(babyBrother, 'i:m:hungry', function() {});\n\n\t\tself.trigger('real nice');\n\n\t\tself.publicMethod = function() {};\n\n\t\t// Initialize and star the app.\n\t\tself.start = function() {\n\n\t\t};\n\n\t\t// Tear down, clean up event listeners and all dom nodes generated by the module.\n\t\tself.stop = function() {\n\t\t\tself.stopListening();\n\t\t};\n\n\t\treturn self;\n\n\t};\n\n\n\n## February 2015\n\nAll parts of the application enter the framework of Marionette.js modules. The heavily used global messaging system decouples modules further. Development goes on in a comfortable pace.\n\n## May 2015\n\nThe public-facing portion of the site moves to Express.js, while the back-end stays on Rails. This provides a significant performance boost. In preparation for the June launch, the codebase is cleaned, gulped, gzipped, and dreamed about over the course of several days.\n\n## June 2015\n\nThe [first interactive map](http://atlas.newamerica.org/mapping-college-readiness) is shown in public at an event, attended also by Delaware's governor. The site behaves glitch-free, and the program is very happy.\n\nWith time on our hands once more, we think about high-level improvements: isomorphic models would simplify data API code, better SEO is needed, Backbone Views are a pain to work with. Luckily, our competent intern Jessica has been making progress prototyping React.js components for the back-end, an endeavour that encouraged us to finally switch technologies.\n\n## July 2015\n\n75% of the site moves away from Backbone Views to React.js components, keeping Marionette.js' global messaging system.\n\n## August 2015\n\nAll Marionette modules move over to React. We learn an important lesson: React encourages more encapsulation, crystal-clear data flow and simpler messaging patterns than Marionette's modules. This is not to say the same is not possible in Marionette, it's just more tempting to take shortcuts that introduce wild couplings, shortcuts of which we discovered a few. The plan becomes to use Marionette more sparingly and only as a global messaging system.\n\nThere is another lesson another step further back: updating technologies - especially to the ones we like - does wonders to code quality. Feeling motivated to keep doing that as frequently as possible.\n\n## September 2015\n\nThe codebase is moved to ES6 code, bundled from a single entry point to the client."},{"id":"ripsaw-js","is_live":true,"name":"ripsaw.js","type":"project","group":"code","title":"ripsaw.js","subtitle":"Guided Design for Non-designers","url":"http://pickled-plugins.github.io/ripsaw-js/","year":2010,"supervisors":[],"collaborators":[],"importance":1,"technologies":["HTML Canvas"],"body_text":"Walking around in Fishs Eddy - a kitchenware store in Manhattan - on a November evening in\n2013, I was struck by a thought: what if I tried to create an app that allows everybody, regardless of their background, to interactively manipulate and customize their own utensils, shelves, jewelry, and receive them 3d printed in the mail?\n\n[ripsaw.js]() was born as a result of this effort."},{"id":"giraffe-for-rhino","is_live":true,"dates":["2014-04","2014-07"],"name":"Giraffe for Rhino","title":"Giraffe for Rhino","type":"project","group":"code","subtitle":"A Strctural Engineering Add-on","url":"http://pickled-plugins.github.io/Giraffe-for-Rhino/","year":2010,"supervisors":["Michael Stein, PE"],"collaborators":[],"categories":["code"],"importance":1,"technologies":["Rhino PythonScript"],"body_text":"Giraffe became the most rounded of my software efforts that aimed to streamline architectural and structural design processes in the majorly hectic world of large-scale constructions. It is a plug-in that organizes and stores complex design geometries in a master-model inside Rhinoceros 3d (one of the best 3d modelers in wide use by architects today) and exports seamlessly to the somewhat sad world of structural engineering software stuck in the 70's. To illustrate the sadness, it will suffice to say that one of the world-leading such software packages, SOFiSTiK, builds up its models in Fortran, which I used extensively in the year 2014. \n\nLuckily, Giraffe did much of the heavy lifting once it was created. It served bravely during the preliminary design of the [Hudson Yards skyscrapers'](https://en.wikipedia.org/wiki/Hudson_Yards_Redevelopment_Project) specialty facades at Schlaich Bergermann and Partner LP, allowing for design modeling up to three times faster. Also less error-prone. And happier."},{"id":"pendant-project","is_live":true,"group":"design","type":"project","categories":["design"],"dates":["2013-01","2013-04"],"name":"Pendant Project","title":"The Pendant Project","subtitle":"Variations on a Set Frame","url":"https://www.etsy.com/shop/dchisel","year":2010,"supervisors":[],"collaborators":["Tiffany Cheezem","Greta Shum","Alison Cook"],"importance":1,"body_text":"[The Pendant Project](https://www.etsy.com/shop/dchisel) is my very first purely creative project that came completely spontaneously and that I could not get out of my mind for months. For such an organic project yielding 32 fairly quirky necklace designs, it is tricky to extract a theme or design direction, but I tried nonetheless:\n\nIt is a design exercise that encourages a lively and expressive interaction between artwork and its frame, one that can be perceived as tension, play, harmony or competition for the viewerâ€™s attention.\n\nHere is my personal favorite starring in a promotional video:\n\n<iframe src=\"https://www.youtube.com/embed/0bKI3VSdD1g\" frameborder=\"0\" allowfullscreen></iframe>\n\nWhile most of the designs are mine, my friends picked up on this idea and gave me directions. Big thanks and shouts out to Tiffany Cheezem, Greta Shum and Alison Cook."},{"id":"pba","is_live":true,"name":"PBA","dates":["2005"],"group":"code","type":"project","title":"Pascal Basketball Association","subtitle":"Our First Videogame","url":"http://pickled-plugins.github.io/pba/","supervisors":[],"collaborators":["TamÃ¡s Plugor","TamÃ¡s GajdÃ³"],"categories":["code"],"importance":1,"languages":["Borland Pascal","Processing"],"body_text":"On a cloudy afternoon during our freshman year of high school, I and two good friends, TamÃ¡s Plugor and TamÃ¡s GajdÃ³, sat down to blend together our love for basketball with our love for code and graphics. In a couple of hours, we wrote the bulk of our first presentable game: PBA, or Pascal Basketball Association.\n\nThere is a big piece of history in this project. [Borland Pascal](https://en.wikipedia.org/wiki/Turbo_Pascal) - hence the name of the game - was the programming language in which I wrote my first sorting algorithm (the first double for loop was in C++ a couple of years before), first linked lists, graphs, trees and backtracking algorithms. The most memorable ones, though, were the graphics experiments: particle-springs animations, light rays bouncing around a random arrangement of mirrors, a kaleidoscope and many many fractals. Still, even out of these, dearest to my heart is PBA. There was something coding it in a small team and sharing it with the entire class that made it special.\n\nAnd so, to satisfy my nostalgic nature, I reconstructed the game in Processing, true to its original looks (though without a menu, name prompt and the high score registry). Through Processing.js, it is now available in the browser. [Ready for that unforgiving hoop](http://pickled-plugins.github.io/pba/)?"},{"id":"kinetic","name":"kinetic","group":"code","type":"project","title":"Deployable Smart Mast","year":2010,"dates":["2010-11","2011-04"],"supervisors":["Prof. Sigrid Adriaenssens","Prof. Branko Glisic"],"collaborators":[],"categories":["code","design"],"importance":1,"is_live":true,"languages":["MatLab","Visual Basic"],"body_text":"The Deployable Smart Mast was my first really serious and really fun college research project, on the intersection of code, mechanics and geometry.\n\nThe mast was built as proof of concept for a structure that adapts its shape based on outside weather conditions, an idea explored under Prof. Sigrid Adriaenssens and Prof. Branko Glisic at Princeton. The acrylic prototype was equipped with a number of heat sensors along its height, and if any of them was triggered, a linear actuator changed the mast's height to stay clear of danger.\n\n<iframe src=\"https://www.youtube.com/embed/BjMAruO2SGA\" frameborder=\"0\" allowfullscreen></iframe>\n\nI was responsible for the conceptual design of the 3d geometry, as well as programming the motion control of the structure based on the sensors' input. A couple of late nights later, we had something to show, after which came the fun part:\n\nThe prototype was demoed to middle school students in New Jersey in the fall of 2010. The students interacted with the prototype, making it lower to a certain height by applying hot air using a blowdrier. At the same time, the a computer screen displayed the current and target geometries of the tower. Humans, computer and prototype all interacted by responding to and validating each othersâ€™ actions.\n\nThe project got published in [Engineering Structures](http://onlinelibrary.wiley.com/doi/10.1111/mice.12013/abstract).\n\nInspired by this project, I conducted a parametric exploration of pantograph shapes, from wireframe design to physical prototypes and fabrication methods.\n\n![Variations](/images/projects/kinetic/variations.svg)"},{"id":"battle","name":"battle","dates":["2012-03","2012-05"],"title":"Battle Shell","group":"design","type":"project","year":2010,"supervisors":["Prof. Sigrid Adriaenssens"],"collaborators":["Laura Ettedgui","Julianne Gola"],"categories":["code","design"],"importance":1,"is_live":true,"languages":["Visual Basic"],"body_text":"A collaboration with architecture students Laura Ettedgui and Julianne Gola at Princeton University under the guidance of Prof. Sigrid Adriaenssens, the Battle Shell gave me an interesting opportunity to work at the intersection of software, structural mechanics and architectural design.\n\n![Battle Shell Rendering 1](/images/projects/battle/battle-render-1.png)\n\n# Architectural Brief\n\nThe [Miami Marine Stadium](https://en.wikipedia.org/wiki/Miami_Marine_Stadium) has recently been appropriated by graffiti artists, to whom no surface is off-limits. Rather than see this as dereliction, we see this as a sign of the youthfulness and desire for expression that is now embedded in the character of the stadium. We hope to incorporate this energy into the stadiumâ€™s future. Rather than build a platform for teens to watch their idols perform, we propose the Miami Marine Stadium as a place for teens to take the stage. The â€˜battleâ€™ is a type of performance specific to the performing arts of contemporary youth culture. Though difficult to stage in typical performance spaces, the battle scenario will be spatially accommodated by proposed split bandshell stages, with the possibility to combine into a larger, single stage for more traditional events.\n\n![Battle Shell Rendering 2](/images/projects/battle/battle-render-2.png)\n\n![](/images/projects/battle/battle-top.png)\n\n# Design Process\n\nFor the project, I've used my particle-springs algorithm implemented in Visual Basic to generate a unit in a shape of a eighth of a sphere. The algorithm was adjusted to provide a shape that combines smoothly with its symmetric twin sibling, such they can come together to form a large, unified roof surface (see plan drawing). Here it is hard at work:\n\n![Battle Shell Form-Finding](/images/projects/battle/battle-shell.svg)\n\nAlthough the shape has an organic feel, it does not result from a particle-spring equilibrium - the simulation is stopped about three quarters of the way, trading off its structural efficiency with many other architectural requirements.\n\nSoftware evolved along with the project - as deemed necessary by its complexity."},{"id":"particle-springs","is_live":false,"name":"particle-springs","title":"Particle-springs experiments.","year":2010,"supervisors":[],"collaborators":[],"spoiler":["an interactive particle-spring design tool following architectural concept","the tool regenerates the structure if their main parameters are modified","upon adjustments, it provides instant feedback on tonnage and constructability, and integrates seamlessly with other software packages used for design development"],"categories":["code","design"],"importance":1,"languages":["Visual Basic"]},{"id":"minimal-chess","is_live":false,"name":"minimal chess","title":"Minimalistic Chess Board","year":2010,"supervisors":[],"collaborators":[],"categories":["design"],"importance":1,"body_text":"A highly minimalistic look at the chess set.\n\nSeeing the elaboration of chess set designs over centuries and cultures, I've decided to take a minimalistic look at it.\n\nI knew I wanted to go 2d first, so that. \n\nI also got interested in redefining the roles of the figures by assigning them shoes. This highlighted different characteristics of the players: modern, formal elegance instead of royal might for the king, strength, status and feminine for the queen, a detachment of the knight's horse from its rider. The pawns \n\nDiscrete hatches distinguish between the two sides.\n\nThe set was hand-drawn, digitally reworked, then lasercut. Playing with it can be confusing."},{"id":"albatross","is_live":false,"name":"albatross","title":"Albatross","year":2010,"supervisors":[],"collaborators":[],"categories":["code"],"importance":1},{"id":"algorithmic-tattoo","is_live":true,"name":"algorithmic tattoo","type":"project","group":"design","title":"Algorithmic Tattoo","subtitle":"Body Art from the Creative Programmer","dates":["2014-11-25"],"supervisors":[],"collaborators":[],"categories":["code","design"],"importance":1,"languages":["JavaScript"]},{"id":"dchisel","name":"dchisel","group":"design","type":"project","title":"Old portfolio site.","url":"http://dchisel.herokuapp.com/","year":2013,"supervisors":[],"collaborators":[],"spoiler":["my old personal website"],"categories":["code","design"],"importance":1,"is_live":false,"languages":["PHP","JavaScript"],"technologies":[]}]